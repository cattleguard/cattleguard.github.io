<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on Tony On Risk</title>
    <link>/tags/go/</link>
    <description>Recent content in go on Tony On Risk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>My Name</copyright>
    <lastBuildDate>Sat, 28 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dorking Around with CORS</title>
      <link>/2018/04/28/dorking-around-with-cors-and-golang/</link>
      <pubDate>Sat, 28 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/28/dorking-around-with-cors-and-golang/</guid>
      <description>After tuning in to Absolute Appsec ep 2 the other day I got pretty interested in CORS security issues related to misconfiguration and dynamic origin handling. I don&amp;rsquo;t know about you, but every once in a while I hear about a bug class, or maybe just a set of unintended consequences that I find particularly amusing.
I&amp;rsquo;ve found that building a tool (no matter how poor), goes a long way toward a deeper understanding.</description>
    </item>
    
    <item>
      <title>How to Proxy Go net/http</title>
      <link>/2018/04/11/how-to-proxy-go-http/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/11/how-to-proxy-go-http/</guid>
      <description>I started playing around a bit (again) in Go recently and had a need to take a look at some requests I was generating. I wanted to take a look in ZAP to see how things were working and use that to make adjustments, etc.
Post is no big deal, but I didn&amp;rsquo;t want to forget how to do this. Also, there are several posts that don&amp;rsquo;t seem to actually work.</description>
    </item>
    
  </channel>
</rss>